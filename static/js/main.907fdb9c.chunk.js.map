{"version":3,"sources":["components/Statistics.js","components/FeedbackOptions.js","components/Section.js","components/Notification.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onClick","style","margin","type","name","Section","title","children","Notification","message","App","state","onLeaveFeedback","setState","prevState","this","Math","round","countTotal","toFixed","countPositivePercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAkBeA,MAhBf,YAAwE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAChD,OACE,gCACE,gCACE,uCAAUJ,KACV,0CAAaC,EAAb,OACA,sCAASC,QAEX,gCACE,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,cCwBOC,MAlCf,YAAwC,IAAZC,EAAW,EAAXA,QAC1B,OACE,gCACE,wBAAQC,MAAO,CAACC,OAAQ,QACtBC,KAAK,SACLC,KAAK,OACLJ,QAAS,WACPA,EAAQ,SAJZ,kBASA,wBAAQC,MAAO,CAACC,OAAQ,QACtBC,KAAK,SACLC,KAAK,UACLJ,QAAS,WACPA,EAAQ,YAJZ,qBASA,wBAAQC,MAAO,CAACC,OAAQ,QACtBC,KAAK,SACLC,KAAK,MACLJ,QAAS,WACPA,EAAQ,QAJZ,qBCZSK,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCIQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,6BAAKA,OCsDIC,E,4MApDbC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,gBAAkB,SAAAR,GAChB,EAAKS,UAAS,SAAAC,GAAS,sBACpBV,EAAOU,EAAUV,GAAQ,O,2DAIhB,IAAD,EACoBW,KAAKJ,MAEpC,OAHW,EACHjB,KADG,EACGC,QADH,EACYC,M,gDAKE,IACjBF,EAASqB,KAAKJ,MAAdjB,KAER,OADesB,KAAKC,MAAc,IAAPvB,EAAcqB,KAAKG,cAAcC,QAAQ,K,+BAKpE,IAAMzB,EAAOqB,KAAKJ,MAAMjB,KAClBC,EAAUoB,KAAKJ,MAAMhB,QACrBC,EAAMmB,KAAKJ,MAAMf,IAEvB,OACE,gCACE,cAAC,EAAD,CAASU,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBN,QAASe,KAAKH,oBAEhCG,KAAKG,aAAe,EACnB,cAAC,EAAD,CAASZ,MAAM,aAAf,SACE,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKG,aACZpB,mBAAoBiB,KAAKK,8BAI7B,cAAC,EAAD,CAAcX,QAAQ,6B,GA9CdY,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.907fdb9c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Statistics ({ good, neutral, bad, total, positivePercentage}) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral} </p>\r\n        <p>Bad: {bad}</p>\r\n      </div>\r\n      <div>\r\n        <p>Total: {total} </p>\r\n        <p>Positive feedback: {positivePercentage}%</p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\nfunction FeedbackOptions ({ onClick }) {\r\n  return (\r\n    <div>\r\n      <button style={{margin: '10px'}}\r\n        type=\"button\"\r\n        name=\"good\"\r\n        onClick={() => {\r\n          onClick('good');\r\n        }}\r\n      >\r\n        Good\r\n      </button>\r\n      <button style={{margin: '10px'}}\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        onClick={() => {\r\n          onClick('neutral');\r\n        }}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button style={{margin: '10px'}}\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        onClick={() => {\r\n          onClick('bad');\r\n        }}\r\n      >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nfunction Notification({ message }) {\r\n  return (\r\n    <>\r\n      <h2>{message}</h2>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notification;","import React, {Component} from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = name => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotal() {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  }\n\n  countPositivePercentage() {\n    const { good } = this.state;\n    const result = Math.round((good * 100) / this.countTotal()).toFixed(0);\n    return result;\n  }\n\n  render() {\n    const good = this.state.good;\n    const neutral = this.state.neutral;\n    const bad = this.state.bad;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onClick={this.onLeaveFeedback} />\n        </Section>\n        {this.countTotal() > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotal()}\n              positivePercentage={this.countPositivePercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}